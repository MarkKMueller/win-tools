========================================================================
    XenGuestAgent
========================================================================

Building:

The XenGuestAgent project was created using Developer Studio 2008. It also
depends on a number of files from the latest version of the Windows PV drivers
repository. As of 7/22/2010 this is:

http://hg.uk.xensource.com/xenclient/lois-beta1.hg

The repository above is subject to change with new projects going forward.
Once you clone this using hg, the following file must be copied into the 
XenGuestAgent root directory:

/inc/v4v.h
/inc/v4vapi.h
/inc/types.h
/xenhdrs/arch-x86_32.h
/xenhdrs/xen.h
/xenhdrs/xen_types.h
/xenuser/xs2/xs2.h


========================================================================
    ACTIVE TEMPLATE LIBRARY : XenGuestAgent Project Overview
========================================================================

AppWizard has created this XenGuestAgent project for you to use as the starting point for
writing your Service (EXE).

This file contains a summary of what you will find in each of the files that
make up your project.

XenGuestAgent.vcproj
    This is the main project file for VC++ projects generated using an Application Wizard.
    It contains information about the version of Visual C++ that generated the file, and
    information about the platforms, configurations, and project features selected with the
    Application Wizard.

XenGuestAgent.idl
    This file contains the IDL definitions of the type library, the interfaces
    and co-classes defined in your project.
    This file will be processed by the MIDL compiler to generate:
        C++ interface definitions and GUID declarations (XenGuestAgent.h)
        GUID definitions                                (XenGuestAgent_i.c)
        A type library                                  (XenGuestAgent.tlb)
        Marshaling code                                 (XenGuestAgent_p.c and dlldata.c)

XenGuestAgent.h
    This file contains the C++ interface definitions and GUID declarations of the
    items defined in XenGuestAgent.idl. It will be regenerated by MIDL during compilation.

XenGuestAgent.cpp
    This file contains the object map and the implementation of WinMain, ServiceMain, and
    the service management functions.

XenGuestAgent.rc
    This is a listing of all of the Microsoft Windows resources that the
    program uses.


/////////////////////////////////////////////////////////////////////////////
Other standard files:

StdAfx.h, StdAfx.cpp
    These files are used to build a precompiled header (PCH) file
    named XenGuestAgent.pch and a precompiled types file named StdAfx.obj.

Resource.h
    This is the standard header file that defines resource IDs.

/////////////////////////////////////////////////////////////////////////////
Proxy/stub DLL project and module definition file:

We are using all automation types so we don't need a custom proxy/stub. We will
use the generic oleaut32 marshaller.

/////////////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////////////
NOTE: We had to switch to using SP1 for Studio 2008. There is a bug in the ATL
wizard that generates incorrect COM registry files so the class factory 
registration fails. Clients all receive 0x80080005 trying to create objects.

NOTE: SP1 does not fix teh problem. To work around it, you have to add this to
each of the RGS files for the coclasses created:
val AppID = s '%APPID%'

NOTE: UseOfATL="1" to statically link the ATL library to reduce dependencies.

/////////////////////////////////////////////////////////////////////////////